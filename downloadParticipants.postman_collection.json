{
	"info": {
		"_postman_id": "26001aa1-966e-45f8-abd5-2ba21e6351b2",
		"name": "05 - downloadParticipants",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7253120"
	},
	"item": [
		{
			"name": "DownloadFilterSemester Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 1s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify download .xlsx: \"+jsonData.data.downloadEvent._id, function () {",
							"    pm.expect(jsonData.data.downloadEvent._id).is.contains(\".xlsx\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"All\"\n            year: \"All\"\n            class: \"\"\n            major: \"\"\n            campus: \"\"\n            semester: \"6\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DownloadFilterSemester-Major Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 2s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify download .xlsx: \"+jsonData.data.downloadEvent._id, function () {",
							"    pm.expect(jsonData.data.downloadEvent._id).is.contains(\".xlsx\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"All\"\n            year: \"All\"\n            class: \"\"\n            major: \"Electrical Engineering\"\n            campus: \"\"\n            semester: \"6\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DownloadFilterSemester-Campus Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 2s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify download .xlsx: \"+jsonData.data.downloadEvent._id, function () {",
							"    pm.expect(jsonData.data.downloadEvent._id).is.contains(\".xlsx\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"All\"\n            year: \"All\"\n            class: \"\"\n            major: \"\"\n            campus: \"Georgetown University\"\n            semester: \"6\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DownloadFilterSemester-Class Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 2s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify download .xlsx: \"+jsonData.data.downloadEvent._id, function () {",
							"    pm.expect(jsonData.data.downloadEvent._id).is.contains(\".xlsx\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"All\"\n            year: \"All\"\n            class: \"2020\"\n            major: \"\"\n            campus: \"\"\n            semester: \"6\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DownloadFilterSemester-Class-Major Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 2s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify download .xlsx: \"+jsonData.data.downloadEvent._id, function () {",
							"    pm.expect(jsonData.data.downloadEvent._id).is.contains(\".xlsx\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"All\"\n            year: \"All\"\n            class: \"2020\"\n            major: \"Electrical Engineering\"\n            campus: \"\"\n            semester: \"6\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DownloadFilterSemester-Class-Major-Campus Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 2s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify download .xlsx: \"+jsonData.data.downloadEvent._id, function () {",
							"    pm.expect(jsonData.data.downloadEvent._id).is.contains(\".xlsx\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"All\"\n            year: \"All\"\n            class: \"2020\"\n            major: \"Electrical Engineering\"\n            campus: \"Georgetown University\"\n            semester: \"6\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DownloadFilterClass Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 1s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify download .xlsx: \"+jsonData.data.downloadEvent._id, function () {",
							"    pm.expect(jsonData.data.downloadEvent._id).is.contains(\".xlsx\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"All\"\n            year: \"All\"\n            class: \"2019\"\n            major: \"\"\n            campus: \"\"\n            semester: \"\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DownloadFilterClass-Major Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 2s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify download .xlsx: \"+jsonData.data.downloadEvent._id, function () {",
							"    pm.expect(jsonData.data.downloadEvent._id).is.contains(\".xlsx\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"All\"\n            year: \"All\"\n            class: \"2019\"\n            major: \"Statistics\"\n            campus: \"\"\n            semester: \"\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DownloadFilterClass-Campus Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 2s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify download .xlsx: \"+jsonData.data.downloadEvent._id, function () {",
							"    pm.expect(jsonData.data.downloadEvent._id).is.contains(\".xlsx\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"All\"\n            year: \"All\"\n            class: \"2019\"\n            major: \"\"\n            campus: \"University of Pennsylvania\"\n            semester: \"\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DownloadFilterMajor Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 2s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify download .xlsx: \"+jsonData.data.downloadEvent._id, function () {",
							"    pm.expect(jsonData.data.downloadEvent._id).is.contains(\".xlsx\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"\"\n            year: \"All\"\n            class: \"\"\n            major: \"Philosophy\"\n            campus: \"\"\n            semester: \"\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DownloadFilterMajor-Campus Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 2s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify download .xlsx: \"+jsonData.data.downloadEvent._id, function () {",
							"    pm.expect(jsonData.data.downloadEvent._id).is.contains(\".xlsx\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"\"\n            year: \"All\"\n            class: \"\"\n            major: \"Philosophy\"\n            campus: \"Universitas Gajah Mada\"\n            semester: \"\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DownloadFilterCampus Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 2s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(2000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify download .xlsx: \"+jsonData.data.downloadEvent._id, function () {",
							"    pm.expect(jsonData.data.downloadEvent._id).is.contains(\".xlsx\");",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"\"\n            year: \"All\"\n            class: \"\"\n            major: \"\"\n            campus: \"University of Pennsylvania\"\n            semester: \"\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Download-500 Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 1s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"Verify error 500: \"+jsonData.errors[0].message, function () {",
							"    pm.expect(jsonData.errors[0].message).is.contains(\"Error: Request failed with status code 500\");",
							"})",
							"",
							"pm.test(\"Verify response code: \"+jsonData.errors[0].extensions.code, function () {",
							"    pm.expect(jsonData.errors[0].extensions.code).is.equal(500);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"\"\n            year: \"\"\n            class: \"2006\"\n            major: \"Universitas Gajah Mada\"\n            semester: \"\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Download-404 Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// reseponse time",
							"pm.test(\"Response time is less than 1s\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status message is OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n    downloadEvent(\n        search: {\n        }\n        filter: {\n            funnelName: \"samsul\"\n            year: \"all\"\n            class: \"2006\"\n            major: \"Universitas Gajah Mada\"\n            semester: \"\"\n        }\n    ) {\n        _id\n    }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "{{graphql-branding}}",
					"host": [
						"{{graphql-branding}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearer_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// New Login",
					"pm.sendRequest(",
					"    {",
					"    url: pm.environment.get(\"graphql-auth\"),",
					"    method: \"POST\",",
					"    header: {",
					"        \"x-api-key\": pm.environment.get(\"x-api-key\"),",
					"        \"Content-Type\": \"application/json\",",
					"    },",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify({query: \"mutation LoginUser {\\r\\n  login(input: {\\r\\n    #   dev\\r\\n    email: \\\"rayhan@codex.works\\\"\\r\\n    password: \\\"rayhan1105\\\"\\r\\n  }) {\\r\\n    token\\r\\n    roleId {\\r\\n      _id\\r\\n      title\\r\\n      state\\r\\n    }\\r\\n    userTypeId {\\r\\n      _id\\r\\n      title\\r\\n      state\\r\\n    }\\r\\n  }\\r\\n}\"})",
					"        }",
					"    }, function(err, res) {",
					"        // console.log(res.json().data.login.token);",
					"        var token = res.json().data.login.token; ",
					"        pm.environment.set(\"bearer_token\", token);",
					"    });"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}